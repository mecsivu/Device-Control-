# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'LAB.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
import matplotlib.pyplot as plt
import random 
from PyQt5.QtCore import QTimer  
import image
import lamp
import laptop
import logo


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(250, 500, 341, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.radioButton = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton.setGeometry(QtCore.QRect(60, 260, 95, 20))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton.setFont(font)
        self.radioButton.setObjectName("radioButton")
        self.BTN_ON = QtWidgets.QPushButton(self.centralwidget)
        self.BTN_ON.setGeometry(QtCore.QRect(190, 170, 93, 41))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.BTN_ON.setFont(font)
        self.BTN_ON.setObjectName("BTN_ON")
        self.radioButton_2 = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_2.setGeometry(QtCore.QRect(60, 220, 95, 20))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_3 = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_3.setGeometry(QtCore.QRect(60, 180, 95, 21))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_3.setFont(font)
        self.radioButton_3.setObjectName("radioButton_3")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(60, 100, 101, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(240, 80, 181, 91))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.BTN_OFF = QtWidgets.QPushButton(self.centralwidget)
        self.BTN_OFF.setGeometry(QtCore.QRect(310, 170, 93, 41))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.BTN_OFF.setFont(font)
        self.BTN_OFF.setObjectName("BTN_OFF")
        self.SWITCH = QtWidgets.QSlider(self.centralwidget)
        self.SWITCH.setGeometry(QtCore.QRect(220, 310, 160, 22))
        self.SWITCH.setOrientation(QtCore.Qt.Horizontal)
        self.SWITCH.setObjectName("SWITCH")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(460, 100, 171, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(170, 440, 121, 41))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(320, 440, 121, 41))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setObjectName("pushButton_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(470, 260, 71, 81))
        self.label_5.setStyleSheet("image: url(:/Myimage/fan (1).png);")
        self.label_5.setText("")
        self.label_5.setObjectName("label_5")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(450, 160, 111, 81))
        self.label_7.setStyleSheet("image: url(:/lampmy/lamp_off.png);")
        self.label_7.setText("")
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(450, 360, 111, 71))
        self.label_8.setStyleSheet("image: url(:/mylaptop/monitor.png);")
        self.label_8.setText("")
        self.label_8.setObjectName("label_8")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(180, 10, 641, 61))
        font = QtGui.QFont()
        font.setPointSize(25)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(670, 0, 131, 111))
        self.label_9.setStyleSheet("image: url(:/logo/Logo-DH-Su-Pham-Ky-Thuat-TP-Ho-Chi-Minh-HCMUTE-623x800.webp);")
        self.label_9.setText("")
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(240, 240, 111, 51))
        font = QtGui.QFont()
        font.setPointSize(30)
        self.label_10.setFont(font)
        self.label_10.setFrameShape(QtWidgets.QFrame.Box)
        self.label_10.setObjectName("label_10")
        self.horizontalSlider = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider.setGeometry(QtCore.QRect(260, 370, 71, 51))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.horizontalSlider.setFont(font)
        self.horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    background: #ccc;               /* Màu của thanh khi tắt */\n"
"    height: 20px;\n"
"    border-radius: 10px;            /* Bo tròn để trông giống thanh gạt */\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: white;              /* Màu tay cầm */\n"
"    border: 1px solid #5c5c5c;\n"
"    width: 20px;                    /* Chiều rộng của tay cầm */\n"
"    height: 20px;                   /* Chiều cao của tay cầm */\n"
"    border-radius: 10px;\n"
"    margin: -5px 0px;               /* Đặt tay cầm vừa khít với thanh */\n"
"}\n"
"\n"
"QSlider::sub-page:horizontal {\n"
"    background: #4CAF50;            /* Màu của thanh khi bật */\n"
"}\n"
"\n"
"QSlider::add-page:horizontal {\n"
"    background: #ccc;               /* Màu của thanh khi tắt */\n"
"}")
        self.horizontalSlider.setMaximum(1)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(570, 390, 200, 61))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_11.setFont(font)
        self.label_11.setText("")
        self.label_11.setObjectName("label_11")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(550, 130, 241, 241))
        self.widget.setObjectName("widget")
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(570, 440, 181, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_12.setFont(font)
        self.label_12.setText("")
        self.label_12.setObjectName("label_12")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.radioButton_3.toggled.connect(self.update_mode)
        self.radioButton_2.toggled.connect(self.update_mode)
        self.radioButton.toggled.connect(self.update_mode)

        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(550, 130, 241, 241))  # Vị trí và kích thước
        self.layout = QtWidgets.QVBoxLayout(self.widget)  # Tạo layout cho widget của bạn
        self.canvas = FigureCanvas(plt.Figure(figsize=(10, 2)))  # Tạo canvas cho matplotlib
        self.layout.addWidget(self.canvas)  # Thêm canvas vào layout

        #độ ẩm
        self.humidity_timer = QTimer()
        self.humidity_timer.timeout.connect(self.update_humidity)
        self.humidity_timer.start(1000) 

        # Khởi tạo dữ liệu nhiệt độ
        self.temperatures = []
        self.time_stamps = []
        self.current_time = 0  # Thay đổi theo thời gian thực

        self.timer = QtCore.QTimer()
        self.timer.timeout.connect(self.update_temperature)
        self.timer.start(1000)  # Cập nhật mỗi giây

        # Vẽ đồ thị ban đầu
        self.plot_temperature()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Khởi tạo dữ liệu nhiệt độ
        self.temperatures = []
        self.time_stamps = []
        self.current_time = 0  # Thay đổi theo thời gian thực

        self.timer = QtCore.QTimer()
        self.timer.timeout.connect(self.update_temperature)
        self.timer.start(1000)  # Cập nhật mỗi giây

        # Vẽ đồ thị ban đầu
        self.plot_temperature()
        
        

        self.timer = QTimer()
        self.timer.timeout.connect(self.update_temperature)
        self.timer.start(1000)

        self.horizontalSlider.valueChanged.connect(self.toggle_state_changed)

        self.pushButton_4.clicked.connect(self.exit)

        self.pushButton_3.clicked.connect(self.clear_all)

        self.SWITCH.valueChanged.connect(self.changevalue )
        
    
        self.BTN_ON.clicked.connect(self.on)
        self.BTN_OFF.clicked.connect(self.off)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "NGÔ ĐẶNG HOÀNG VŨ"))
        self.radioButton.setText(_translate("MainWindow", "3"))
        self.BTN_ON.setText(_translate("MainWindow", "ON"))
        self.radioButton_2.setText(_translate("MainWindow", "2"))
        self.radioButton_3.setText(_translate("MainWindow", "1"))
        self.label_2.setText(_translate("MainWindow", "MODE"))
        self.label_3.setText(_translate("MainWindow", "CONTROL"))
        self.BTN_OFF.setText(_translate("MainWindow", "OFF"))
        self.label_4.setText(_translate("MainWindow", "DEVICE"))
        self.pushButton_3.setText(_translate("MainWindow", "CLEAR"))
        self.pushButton_4.setText(_translate("MainWindow", "EXIT"))
        self.label_6.setText(_translate("MainWindow", "DEVICE CONTROL"))
        self.label_10.setText(_translate("MainWindow", "0"))

    def changevalue(self):
        value = self.SWITCH.value()
        print(value)   
        self.label_10.setText(str(value))
        self.label_5.setStyleSheet("image: url(:/Myimage/fan);")
        if value==0:
             self.label_5.setStyleSheet("image: url(:/Myimage/fan (1));")

    def on(self):
        self.label_7.setStyleSheet("image: url(:/lampmy/lamp_on);")
    def off(self):
        self.label_7.setStyleSheet("image: url(:/lampmy/lamp_off);")

    def clear_all(self):
        if  self.radioButton_3.isChecked():
            self.SWITCH.setValue(0)
            self.label_10.setText("0")
            self.label_7.setStyleSheet("image: url(:/lampmy/lamp_off);")
            self.label_5.setStyleSheet("image: url(:/Myimage/fan (1));")
            self.radioButton.setChecked(False)
            self.radioButton_2.setChecked(False)
            self.radioButton_3.setChecked(False)
            self.horizontalSlider.setValue(0)
            self.label_8.setStyleSheet("image: url(:/mylaptop/monitor);")
            self.temperatures.clear()  # Xóa dữ liệu nhiệt độ
            self.time_stamps.clear()   # Xóa thời gian
            self.current_time = 0      # Đặt lại thời gian về 0
            self.plot_temperature()  # Vẽ lại đồ thị

    def exit(self):
        sys.exit(app.exec_())
    
    def toggle_state_changed(self, value):
        if value == 1:
            self.label_8.setStyleSheet("image: url(:/mylaptop/monitor (1));")  
        else:
            self.label_8.setStyleSheet("image: url(:/mylaptop/monitor);")  
    
    def update_temperature(self):
        temperature = random.uniform(20.0, 30.0)  # Tạo nhiệt độ ngẫu nhiên
        self.label_11.setText(f"Nhiệt độ: {temperature:.2f} °C")  # Cập nhật nhãn

        if self.radioButton_2.isChecked():  
            if temperature > 25:
                self.label_5.setStyleSheet("image: url(:/Myimage/fan.png);")  # Quạt bật
                self.label_10.setText("50")  # Đặt mức quạt là 50 cho label_10
                self.SWITCH.setValue(50)  # Đặt công tắc ở mức 50
            else:
                self.label_5.setStyleSheet("image: url(:/Myimage/fan (1).png);")  # Quạt tắt
                self.label_10.setText("0")  # Đặt mức quạt là 0 cho label_10
                self.SWITCH.setValue(0)  # Đặt công tắc ở mức 0

        # Lưu nhiệt độ để vẽ đồ thị
        self.temperatures.append(temperature)
        self.time_stamps.append(self.current_time)
        self.current_time += 1  # Tăng thời gian
        self.plot_temperature()  # Vẽ lại đồ thị

    def plot_temperature(self):
        # Xóa đồ thị hiện tại
        self.canvas.figure.clear()
        ax = self.canvas.figure.add_subplot(111)

        ax.plot(self.time_stamps, self.temperatures, label='Nhiệt độ', color='blue')
        ax.set_title('Nhiệt độ theo Thời gian')
        ax.set_xlabel('Thời gian (s)')
        ax.set_ylabel('Nhiệt độ (°C)')
        ax.legend()
        ax.grid()
       

        # Làm mới canvas
        self.canvas.draw()

    def update_humidity(self):
        humidity = random.uniform(30.0, 70.0)  # Tạo độ ẩm ngẫu nhiên
        self.label_12.setText(f"Độ ẩm: {humidity:.2f} %")  # Cập nhật nhãn

    def update_mode(self):
        if self.radioButton_3.isChecked():
            self.set_mode_1()
        elif self.radioButton_2.isChecked():
            self.set_mode_2()
        elif self.radioButton.isChecked():
            self.set_mode_3()
    def set_mode_2(self):
        self.horizontalSlider.setValue(0)
        self.label_7.setStyleSheet("image: url(:/lampmy/lamp_off);")  # Đặt hình ảnh đèn tắt
        self.label_8.setStyleSheet("image: url(:/mylaptop/monitor);")  # Đặt hình ảnh màn hình tắ
        self.BTN_ON.setEnabled(False)
        self.BTN_OFF.setEnabled(False)
        self.horizontalSlider.setEnabled(False)
        self.SWITCH.setEnabled(False)
        temperature = random.uniform(20.0, 30.0)  # Tạo nhiệt độ ngẫu nhiên
        self.label_11.setText(f"Nhiệt độ: {temperature:.2f} °C")  # Cập nhật nhãn
        if self.radioButton_2.isChecked():  # Kiểm tra nếu chế độ 2 đang được chọn
            if temperature > 25:
                self.label_5.setStyleSheet("image: url(:/Myimage/fan);")  # Bật quạt
                self.label_10.setText(str(50))  # Gán giá trị quạt là 50 cho label_10
            else:
                self.label_5.setStyleSheet("image: url(:/Myimage/fan (1));")  # Tắt quạt
                self.label_10.setText("0")  # Gán giá trị quạt là 0 cho label_10

    def set_mode_1(self):
    # Enable all manual controls for mode 1
        self.BTN_ON.setEnabled(True)
        self.BTN_OFF.setEnabled(True)
        self.horizontalSlider.setEnabled(True)
        self.SWITCH.setEnabled(True) 
        self.pushButton_3.setEnabled(True) 

    def set_mode_3(self): 
        self.pushButton_3.setEnabled(False)
        self.SWITCH.setEnabled(False)
        self.BTN_ON.setEnabled(False)
        self.BTN_OFF.setEnabled(False)
        self.horizontalSlider.setEnabled(False)
        self.BTN_ON.click()  # Bật đèn
        self.SWITCH.setValue(100)  # Đặt công tắc quạt lên mức tối đa
        self.label_10.setText("100")  # Cập nhật giá trị quạt
        self.label_5.setStyleSheet("image: url(:/Myimage/fan);")  # Đặt hình ảnh quạt đang hoạt động
        self.label_7.setStyleSheet("image: url(:/lampmy/lamp_on);")  # Đặt hình ảnh đèn đang hoạt động
        self.label_8.setStyleSheet("image: url(:/mylaptop/monitor (1));")  # Đặt hình ảnh màn hình máy tính đang hoạt động
        self.horizontalSlider.setValue(1)
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
